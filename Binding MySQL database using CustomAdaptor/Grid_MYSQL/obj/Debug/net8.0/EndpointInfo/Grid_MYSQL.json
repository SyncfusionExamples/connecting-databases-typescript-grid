{
  "openapi": "3.0.1",
  "info": {
    "title": "Grid_MYSQL",
    "version": "1.0"
  },
  "paths": {
    "/api/Grid": {
      "post": {
        "tags": [
          "Grid"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataManagerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DataManagerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DataManagerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "Grid"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Orders"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Orders"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Orders"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Grid/Insert": {
      "post": {
        "tags": [
          "Grid"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Grid/Update": {
      "post": {
        "tags": [
          "Grid"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Grid/Remove": {
      "post": {
        "tags": [
          "Grid"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Grid/BatchUpdate": {
      "post": {
        "tags": [
          "Grid"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersCRUDModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Aggregate": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataManagerRequest": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          },
          "antiForgery": {
            "type": "string",
            "nullable": true
          },
          "requiresCounts": {
            "type": "boolean"
          },
          "table": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sorted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            },
            "nullable": true
          },
          "search": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchFilter"
            },
            "nullable": true
          },
          "where": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhereFilter"
            },
            "nullable": true
          },
          "aggregates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aggregate"
            },
            "nullable": true
          },
          "onDemandGroupInfo": {
            "$ref": "#/components/schemas/OnDemandGroupInfo"
          },
          "isLazyLoad": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "OnDemandGroupInfo": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "skip": {
            "type": "integer",
            "format": "int32"
          },
          "take": {
            "type": "integer",
            "format": "int32"
          },
          "where": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhereFilter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Orders": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerID": {
            "type": "string",
            "nullable": true
          },
          "employeeID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "freight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shipCity": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrdersCRUDModel": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "nullable": true
          },
          "keyColumn": {
            "type": "string",
            "nullable": true
          },
          "key": {
            "nullable": true
          },
          "value": {
            "$ref": "#/components/schemas/Orders"
          },
          "added": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Orders"
            },
            "nullable": true
          },
          "changed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Orders"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Orders"
            },
            "nullable": true
          },
          "params": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchFilter": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "ignoreAccent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Sort": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhereFilter": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "ignoreCase": {
            "type": "boolean"
          },
          "ignoreAccent": {
            "type": "boolean"
          },
          "isComplex": {
            "type": "boolean"
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "condition": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          },
          "predicates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WhereFilter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}